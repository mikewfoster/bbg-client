
:root {
    --eh-primary: #CCE1FF;
    --eh-secondary: #3451a9;
    --eh-grass: #8beaaf;
    --eh-size: 270;
  }
#egghunt-wrapper {
    background: var(--eh-grass);
}
#egghunt {
    * {
    box-sizing: border-box;
  }
  #egghunt-body {
    align-items: center;
    counter-reset: score;
    display: flex;
    font-family: 'HelveticaNeue-Light', 'Helvetica Neue Light', 'Helvetica Neue', Helvetica, Arial, 'Lucida Grande', sans-serif;
    justify-content: center;
    min-height: 80vh;
    overflow: hidden;
  }
  .game {
    cursor: search;
    height: 70vh;
    margin: 0;
    position: relative;
    width: 90vw;
  }
  .game__cell {
    --cellSize: calc((var(--eh-size) / var(--cells)));
    height: calc(var(--cellSize) * 1px);
    left: calc((var(--x) * var(--cellSize)) * 1px);
    line-height: calc(var(--cellSize) * 1px);
    position: absolute;
    top: calc((var(--y) * var(--cellSize)) * 1px);
    width: calc(var(--cellSize) * 1px);
  }
  .game__cell .game__cell {
    display: none;
  }

  .gc1.game__cell > .egg__container {
    transform: translate(-50%, -50%) scale(1);
  }
  .gc1.game__cell > .egg__container > .egg {
    transform-origin: center;
    transform: translate(-50%, -50%) scale(1) rotate(calc(var(--rotation) * 1deg));
  }

  .gc1.game__cell > .egg__check:not(:checked) + .egg__container > .egg,
  .gc1.game__cell > .egg__check:not(:checked) + .egg__container {
    -webkit-animation-name: pulse;
    -webkit-animation-duration: 6s;
    -webkit-animation-timing-function: ease-in-out;
    -webkit-animation-iteration-count: infinite;
    animation-name: pulse;
    animation-duration: 6s;
    animation-timing-function: ease-in-out;
    animation-iteration-count: infinite;
  }

  .game__cell.gc1 .game__cell > .egg__container {
    transform: translate(-50%, -50%) scale(1);
  }
  .game__cell.gc1 .game__cell > .egg__container > .egg {
    transform-origin: center;
    transform: translate(-50%, -50%) scale(1) rotate(calc(var(--rotation) * 1deg));
  }
  
  .egg__check:checked + .egg__container > .game__cell > .egg__check:not(:checked) + .egg__container,
  .egg__check:checked + .egg__container > .game__cell > .egg__check:not(:checked) + .egg__container > .egg {
    -webkit-animation-name: pulse;
    -webkit-animation-duration: 6s;
    -webkit-animation-timing-function: ease-in-out;
    -webkit-animation-iteration-count: infinite;
    animation-name: pulse;
    animation-duration: 6s;
    animation-timing-function: ease-in-out;
    animation-iteration-count: infinite;
  }

  .egg__check:checked + .egg__container > .game__cell > .egg__check:not(:checked) + .egg__container > .game__cell {
    display: none;
    -webkit-animation-name: none;
    animation-name: none;
  }
  
  .grass {
    height: 80vh;
    width: 120vw;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  .grass__base {
    fill: #8beaaf;
  }
  .grass__blade {
    fill: #26a65b;
  }
  .first-egg {
    height: 120px !important;
    width: 90px !important;
  }
  .egg {
    background: radial-gradient(circle at 30% 0%, var(--eh-primary) 20%, var(--eh-secondary) 20%, var(--eh-secondary) 25%, var(--eh-primary) 25%, var(--eh-primary) 30%, var(--eh-secondary) 30%, var(--eh-secondary) 35%, var(--eh-primary) 35%) 0 0/200% 200%, var(--eh-primary);
    border-radius: 50% 50% 50% 50%/60% 60% 40% 40%;
    height: 70px;
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%) scale(0) rotate(calc(var(--rotation) * 1deg));
    transition: transform 0.25s ease;
    width: 60px;
  }
  .egg__container {
    height: calc(var(--cellSize) * 1px);
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%) scale(0);
    transition: transform 0.25s ease;
    width: calc(var(--cellSize) * 1px);
  }
  .egg__check {
    cursor: pointer;
    height: calc(var(--cellSize) * 1px);
    left: 0;
    opacity: 0;
    position: absolute;
    top: 0;
    width: calc(var(--cellSize) * 1px);
    z-index: 2;
  }
  .egg__check:checked {
    counter-increment: score var(--score);
    transform: scale(0);
  }
  .egg__check:checked ~ .egg__container {
    transform: translate(-50%, -50%) scale(1);
  }
  .egg__check:checked ~ .egg__container > .egg {
    -webkit-animation: found 0.5s forwards;
            animation: found 0.5s forwards;
  }
  .egg__check:checked ~ .egg__container .game__cell {
    display: block;
  }
  .info-screen {
    align-items: center;
    background: var(--eh-secondary);
    color: var(--eh-primary);
    display: flex;
    flex-direction: column;
    height: 105vh;
    justify-content: center;
    left: 50%;
    overflow: hidden;
    position: fixed;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 105vw;
    z-index: 5;
  }
  .info-screen__content {
    position: relative;
    max-width: 90vw;
    width: 300px;
  }
  .info-screen__content h1,
  .info-screen__content h2 {
    text-transform: uppercase;
  }
  .info-screen__content p {
    text-align: left;
  }
  .info-screen__content .egg {
    --eh-secondary: #f7f396;
    --eh-primary: #8beaaf;
    left: 90%;
    position: absolute;
    top: -35%;
    transform: translate(-120%, 60%) scale(1) rotate(20deg);
  }
  button {
    background: var(--eh-secondary);
    border: 2px solid var(--eh-primary);
    color: var(--eh-primary);
    cursor: pointer;
    font-weight: bold;
    letter-spacing: 4px;
    padding: 8px 12px;
    text-transform: uppercase;
    width: 100%;
  }
  .start {
    height: 100vh;
    left: 50%;
    opacity: 0;
    position: fixed;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 100vw;
    z-index: 6;
    border-radius: 4px;
  }
  .start:checked,
  .start:checked ~ .title-screen {
    transform: translate(-50%, -50%) translate(0, -100%);
    transition: transform 0.25s ease;
    background: unset;
  }
  .start:checked ~ .result {
    -webkit-animation: slideUp 0.25s 30s both;
            animation: slideUp 0.25s 30s both;
  }
  .start:checked ~ .result .egg {
    -webkit-animation-name: drop;
            animation-name: drop;
  }
  .result {
    text-align: center;
    transform: translate(-50%, -50%) translate(0, 100%);
  }
  .result .egg {
    -webkit-animation-duration: 2s;
            animation-duration: 2s;
    -webkit-animation-fill-mode: both;
            animation-fill-mode: both;
    transform: translate(-50%, -50%) scale(1) rotate(calc(var(--rotation) * 1deg)) translate(0, -100vh);
  }
  .result .egg:nth-of-type(1) {
    -webkit-animation-delay: 30s.25s;
            animation-delay: 30s.25s;
  }
  .result .egg:nth-of-type(2) {
    -webkit-animation-delay: 30s.5s;
            animation-delay: 30s.5s;
  }
  .result .egg:nth-of-type(3) {
    -webkit-animation-delay: 30s.75s;
            animation-delay: 30s.75s;
  }
  .bunny {
    position: absolute;
    font-size: 4rem;
    z-index: 4;
  }
  .bunny:nth-of-type(1) {
    top: -5%;
    left: -5%;
    transform: rotate(-30deg);
  }
  .bunny:nth-of-type(2) {
    top: 90%;
    left: 85%;
    transform: rotate(30deg);
  }
  .score:after {
    content: counter(score);
  }
  @-webkit-keyframes wiggle {
    0%, 100% {
      transform: translate(-150%, 100%) scale(1) rotate(-35deg);
    }
    50% {
      transform: translate(-150%, 100%) scale(1) rotate(35deg);
    }
  }
  @keyframes wiggle {
    0%, 100% {
      transform: translate(-150%, 100%) scale(1) rotate(-35deg);
    }
    50% {
      transform: translate(-150%, 100%) scale(1) rotate(35deg);
    }
  }
  @-webkit-keyframes slideUp {
    to {
      transform: translate(-50%, -50%) translate(0, 0);
    }
  }
  @keyframes slideUp {
    to {
      transform: translate(-50%, -50%) translate(0, 0);
    }
  }
  @-webkit-keyframes found {
    0% {
      transform: translate(-50%, -50%) scale(1) rotate(calc(var(--rotation) * 1deg));
    }
    50% {
      transform: translate(-50%, -50%) scale(1.5) rotate(calc(var(--rotation) * 1deg));
    }
    100% {
      transform: translate(-50%, -50%) scale(1) rotate(calc(var(--rotation) * 1deg));
    }
  }
  @keyframes found {
    0% {
      transform: translate(-50%, -50%) scale(1) rotate(calc(var(--rotation) * 1deg));
    }
    50% {
      transform: translate(-50%, -50%) scale(1.5) rotate(calc(var(--rotation) * 1deg));
    }
    100% {
      transform: translate(-50%, -50%) scale(1) rotate(calc(var(--rotation) * 1deg));
    }
  }
  @-webkit-keyframes drop {
    to {
      transform: translate(-50%, -50%) scale(1) rotate(calc(var(--rotation) * 1deg)) translate(0, 100vh);
    }
  }
  @keyframes drop {
    to {
      transform: translate(-50%, -50%) scale(1) rotate(calc(var(--rotation) * 1deg)) translate(0, 100vh);
    }
  }
  
  @-webkit-keyframes pulse {
    0%, 70% {
      opacity: 0.0
    }
    85% {
      opacity: 0.6
    }
    100% {
      opacity: 0.0
    }
  }

  @keyframes pulse {
    0%, 70% {
      opacity: 0.0
    }
    85% {
      opacity: 0.6
    }
    100% {
      opacity: 0.0
    }
  }
}